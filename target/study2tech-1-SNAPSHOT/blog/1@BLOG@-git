p#@[1] Sign up on github: a#@http://github.com/join #@Click here to join gitp#@     img#@\images\git\1signup.png  p#@[2] Upload your public key to access github from your local machine: https://github.com/settings/sshp#@    img#@\images\git\2ssh.png  p#@[3] First generate SSH key: https://help.github.com/articles/generating-ssh-keysp#@[4] Upload your public key to github as per mentioned at step [2]. So, you are allowed to checkin your code through your local machine to github.p#@[5] Create a new git repo: https://github.com/newGive repository name and description and click on "Create repository".p#@    img#@\images\git\3createrepo.png p#@[6] Next step: Let's checkin some code to newly created repositoryCopy git clone url from: HTTP clone URLp#@    img#@\images\git\4clone.png p#@[7] Open command promptp#@[8] Go to location where you want to clone the repositoryp#@[9] Check if you have already installed the Git. Verify by : Command Prompt > gitIf no then follow step [10] else follow from step [11]p#@[10] Download tortoise git: https://code.google.com/p/tortoisegit/wiki/Downloadp#@10.1 Install it.p#@10.2 Configure git config file at :/HOME/.gitconfigYou can check your HOME directory by: Environment Variable > System Variable > HOMEOrp#@10.2 Follow steps here: https://help.github.com/articles/set-up-git Basically you need to setup your email id with which you will checkin.BOX_START#START_BOX_CONTENT(1) git config --global user.name "Your Name Here"(2) git config --global user.email "your_email@example.com"BOX_END#b#@[11] Let's clone the repository. After step [9], you are in Command prompt > direcotryb#@11.1: git clone https://github.com/Test-blog/test.gitb#@11.2 It will clone your repo. Make sure you will give your repo name in step: 11.1 instead of https://github.com/Test-blog/test.git b#@11.3 go to repo folder. i.e.: cd Test-blogb#@11.4 create test file: > touch test.txtb#@11.5 checkin test.txt by follow below steps:b#@11.5.1 git add test.txtb#@11.5.2 git commit -m 'checkin test file'b#@11.5.3. git push origin masterp#@    img#@\images\git\5push.png H2#@Git recommended branching strategyThe quick and easiest way to manage branch strategy by creating fork out of your master branch. Do your feature development on the created fork branch.1. You can do rebase from master to your fork to keep your branch up to date.2. Once development will be done, you can merge your fork to master back.H4#@How to rebase fork feature branch with master.1. First go to your feature fork branch.2.  Add your master as a remote branch to pull master changes:git remote add upstream git://github.scm.corp.ebay.com/ShippingX/CIP.git3.  pull changes from mastergit pull upstream master 4.  pull changes from the fork (if there are multiple devs working on the same fork)git pull 5.  resolve conflicts if any6. push to githubgit push